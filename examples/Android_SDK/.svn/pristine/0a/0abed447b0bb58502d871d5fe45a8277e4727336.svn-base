package com.ihealth.communication.control;

import android.content.Context;

import com.ihealth.communication.base.comm.BaseComm;
import com.ihealth.communication.base.comm.BaseCommCallback;
import com.ihealth.communication.ins.BtmInsSet;
import com.ihealth.communication.ins.InsCallback;
import com.ihealth.communication.manager.iHealthDevicesManager;

/**
 * Created by apple on 1/13/16.
 */
public class BtmControl implements DeviceControl{

    private static final String TAG = "BtmControl";
    private Context mContext;
    private BtmInsSet mBtmInsSet;
    private BaseComm mComm;
    private String mAddress;
    private String mType;
    private BaseCommCallback mBaseCommCallback;
    /**
     * a constructor for BtmControl.
     * @param context
     * @param comm
     * @param userName
     * @param mac
     * @param type
     * @param insCallback
     * @param mBaseCommCallback
     * @hide
     */
    public BtmControl(Context context, BaseComm comm, String userName, String mac, String type, InsCallback insCallback, BaseCommCallback mBaseCommCallback){
        this.mComm = comm;
        this.mContext = context;
        this.mAddress = mac;
        this.mType = type;
        this.mBaseCommCallback = mBaseCommCallback;
        mBtmInsSet = new BtmInsSet(context, comm, userName, mac, type, insCallback, mBaseCommCallback);
    }
    /**
     * @hide
     */
    public BtmControl(){

    }

    public void getBattery(){
        mBtmInsSet.getBattery();
    }

    public void setTime(){
        mBtmInsSet.setTime();
    }
    /**
     *
     * @param index 1: user1 2: user2
     */
    public void getUserData(int index){
        mBtmInsSet.getUserData(index);
    }

    /**
     * @hide
     */
    @Override
    public void init() {
        this.mBaseCommCallback.onConnectionStateChange(mAddress, mType, iHealthDevicesManager.DEVICE_STATE_CONNECTED, 0, null);
    }

    /**
     * disconnect am device
     */
    @Override
    public void disconnect() {
        mComm.disconnect(mAddress);
    }

    @Override
    public void destroy() {
        if(mBtmInsSet != null)
            mBtmInsSet.destroy();
        mBtmInsSet = null;
        mContext = null;
        mComm = null;
    }

}
