package com.ihealth.communication.utils;

import android.hardware.camera2.params.Face;
import android.os.Environment;
import android.util.AtomicFile;
import android.util.Log;
import android.widget.SimpleAdapter;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 * Created by jing on 16/10/9.
 */

public class Logger {

    static private String TAG = "Logger";
    static private boolean clearOutDateLogFlag = false;
    static private SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");
    static private SimpleDateFormat timeFormatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    static private String logName = "_SDK_Debug.txt";
    private static String sdCardPath = Environment.getExternalStorageDirectory().getAbsolutePath() + "/";

    public static void v(String tag, String msg) {
         Log.v(tag, msg);
    }

    public static void d(String tag, String msg) {
         Log.d(tag, msg);}

    public static void i(String tag, String msg) {
         Log.i(tag, msg);
    }

    public static void w(String tag, String msg) {
         Log.w(tag, msg);
    }

    public static void e(String tag, String msg) {
         Log.e(tag, msg);
    }

    /**
     * 处理Log
     * @param level
     * @param tag
     * @param info
     */
    public static void commandHandleLog(com.ihealth.communication.utils.Log.Level level, String tag, String info) {
        //Log...
        String levelStr = "";
        switch(level) {
            case VERBOSE:
                levelStr = "V";
                Logger.v(tag, info);
                break;
            case DEBUG:
                levelStr = "D";
                Logger.d(tag, info);
                break;
            case INFO:
                levelStr = "I";
                Logger.i(tag, info);
                break;
            case WARN:
                levelStr = "W";
                Logger.w(tag, info);
                break;
            case ERROR:
                levelStr = "E";
                Logger.e(tag, info);
                break;
        }

        Date currentDate  = new Date();

        Calendar calendar = Calendar.getInstance();
        calendar.setTime(currentDate);
        calendar.add(Calendar.DATE,-7);

        String outDateStr = dateFormatter.format(calendar.getTime());
        String currentTimeStr = timeFormatter.format(currentDate);
        String currentDateStr = dateFormatter.format(currentDate);

        //Clear
        if (clearOutDateLogFlag == false) {
            clearOutDateLogFlag = true;
            commandClearOutDateLog(outDateStr);
        }

        //Save
        commandSaveLog(sdCardPath + currentDateStr + logName, currentTimeStr, levelStr, tag, info);

    }

    /**
     * 清除7天之前的文件
     * @param outDateStr
     */
    private static void commandClearOutDateLog(String outDateStr) {
        String outDatePath = sdCardPath + outDateStr;
        File rootFile = new File(sdCardPath);
        File[] files = rootFile.listFiles();
        for(int i=files.length; i>0; i++) {
            String fileName = files[i].getName();
            if (fileName.endsWith(logName) && (fileName.compareTo(outDatePath)<0)) {
                files[i].delete();
            }
        }
    }

    /**
     * 存储Log
     * @param time
     * @param level
     * @param tag
     * @param info
     */
    private static void commandSaveLog(String fileName, String time, String level, String tag, String info) {
        File file = new File(fileName);

        try {
            FileWriter filerWriter = new FileWriter(file, true);
            BufferedWriter bufWriter = new BufferedWriter(filerWriter);
            String logInfo = time + "  " + level + "/" + tag + ":  " + info;
            bufWriter.write(logInfo);
            bufWriter.newLine();
            bufWriter.close();
            filerWriter.close();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }


}
